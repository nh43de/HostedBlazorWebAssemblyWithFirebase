@page "/"
@using HostedBlazorWithFirebase.Client.Models
@using HostedBlazorWithFirebase.Client.Services
@using HostedBlazorWithFirebase.Client.Services.Firebase
@inject FirebaseJsProvider _firebase
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<AuthorizeView>
    <Authorized>
        Logged In as @context.User.Identity.Name

        <botton class="btn btn-light" @onclick="@(()=>Logout())">Logout</botton>
    </Authorized>
    <NotAuthorized>
        Not logged in.

    </NotAuthorized>
</AuthorizeView>

@*<button class="btn btn-info" @onclick="@(()=>Test())">Test</button>*@

@code {
    private bool loading;
    public LoginRequest model { get; set; } = new();

    public async Task Logout()
    {
        await _firebase.SignOut();
    }

    public async Task Test()
    {
        var userJson = await JS.InvokeAsync<string>("firebaseGetCurrentUser");

        //Console.WriteLine(userJson);
    }

    private async void OnValidSubmit()
    {
        loading = true;
        try
        {
            var r = await _firebase.UserSignIn(model.UserName, model.Password);

            var returnUrl = NavigationManager.QueryString("returnUrl") ;

            if(string.IsNullOrEmpty(returnUrl) == false)
                NavigationManager.NavigateTo(returnUrl, true);
        }
        catch (Exception ex)
        {
            loading = false;
            StateHasChanged();
        }
    }
}
@*<button class="btn btn-info" @onclick="@(()=>Login())">Login</button>

    <button class="btn btn-light" @onclick="@(()=>Logout())">Logout</button>*@
